{"version":3,"sources":["component/InfoCard.js","component/Loader.js","component/CommentModal.js","component/PostCard.js","appService.js","App.js","index.js"],"names":["InfoCard","props","data","user","original","image_url","username","body","className","style","width","src","height","alt","borderRadius","comment","Loader","Spinner","animation","role","CommentModal","comments","loading","Modal","show","size","aria-labelledby","centered","onHide","hide","Header","closeButton","Title","id","Body","minHeight","length","map","key","PostCard","post","likePostEvent","getPostCommentsEvent","name","thumbnail","postId","votes_count","comments_count","voted_for_post","current_user","overflow","whiteSpace","textOverflow","onClick","color","icon","faThumbsUp","faComment","apiCall","endPoint","Promise","resolve","reject","axios","get","headers","Authorization","then","response","catch","error","App","useState","posts","setPosts","setComments","likes","setLikes","likesLoading","setLikesLoading","setLoading","commentModalShow","setCommentModalShow","Date","filterDate","setFilterDate","setError","getPosts","d","date","moment","format","useEffect","likePost","index","findIndex","voteCount","slice","votes","getPostComments","Alert","variant","selected","onChange","onFilter","type","overflowY","maxHeight","like","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6ba3018.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction InfoCard(props) {\r\n    const { data } = props;\r\n    const { user: { image_url: { original }, username}, body } = data;\r\n    return (\r\n        <div className=\"row m-0\" >\r\n            <div className=\"row w-100 mx-0 p-1 my-1 bg-white\">\r\n                <div className=\"m-0\" style={{ width: 50 }}>\r\n                    <img src={original} className=\"\" height=\"45\" width=\"45\" alt=\"Avatar\" style={{ borderRadius: 100 }} />\r\n                </div>\r\n                <div className=\"pl-2 pt-2\">\r\n                    <p>{username}</p>\r\n                </div>\r\n                <div className=\"w-100 pl-2 pt-2\">\r\n                    {\r\n                        props.comment &&\r\n                        <div className=\"w-100\">\r\n                            <p>{body}</p>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InfoCard;\r\n","import React from 'react';\r\nimport {Spinner} from \"react-bootstrap\";\r\n\r\nfunction Loader(props) {\r\n    return (\r\n        <div className=\"d-flex w-100 justify-content-center align-items-center py-2\">\r\n            <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport InfoCard from \"./InfoCard\";\r\nimport Loader from \"./Loader\";\r\n\r\nfunction CommentModal(props) {\r\n    const { comments,loading } = props;\r\n    return (\r\n        <>\r\n            <Modal\r\n                show={props.show}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                onHide={() => props.hide(false)}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Comments\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body style={{ minHeight: 300 }}>\r\n                    {\r\n                        loading && !comments.length ? <Loader /> :\r\n                        comments && comments.length ?\r\n                            comments.map(comment =>\r\n                                <div key={comment.id} className=\"row m-0\" >\r\n                                    <InfoCard data={comment} comment={true} />\r\n                                </div>\r\n                            ) : ''\r\n                    }\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CommentModal;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faThumbsUp, faComment } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction PostCard(props) {\r\n    const { post, likePostEvent, getPostCommentsEvent } = props;\r\n    const { name, thumbnail: { image_url }, id: postId, votes_count, comments_count, current_user: { voted_for_post} } = post;\r\n    return (\r\n        <div className=\"col-md-4 mb-2 p-1\">\r\n            <div className=\"border px-3 py-1\">\r\n                <div style={{ overflow: 'hidden', whiteSpace: 'nowrap', textOverflow: 'ellipsis' }}>\r\n                    <h5>{name}</h5>\r\n                </div><hr />\r\n                <div className=\"w-100\">\r\n                    <img alt=\"img\" className=\"w-100\" src={image_url} />\r\n                </div><hr />\r\n                <div className=\"d-flex cursor-pointer\">\r\n                    <div className=\"w-50\" onClick={() => likePostEvent(postId)} style={{ color: voted_for_post ? 'green' : ''}}>\r\n                       <FontAwesomeIcon icon={faThumbsUp} />\r\n                       <span className=\"ml-1\">{votes_count}</span>\r\n                    </div>\r\n                    {\r\n                        comments_count ?\r\n                        <div className=\"w-50 text-right cursor-pointer\" onClick={() => getPostCommentsEvent(postId)}>\r\n                            <FontAwesomeIcon icon={faComment} />\r\n                            <span className=\"ml-1\">{comments_count}</span>\r\n                        </div> : ''\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostCard;\r\n","import axios from \"axios\";\r\nconst baseUrl ='https://api.producthunt.com/v1';\r\n\r\n// Common function to make get api call\r\nexport default function apiCall (endPoint) {\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(baseUrl + endPoint, {\r\n            headers:{\r\n                Authorization: 'Bearer Xbdpx_jQy6cWVQE-rfPPso8-F_PZZrgItIDRGKumkIw',\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            resolve(response)\r\n        })\r\n        .catch(function (error) {\r\n            reject(error);\r\n        });\r\n    });\r\n};","import React, { useState, useEffect } from 'react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Alert } from 'react-bootstrap';\nimport CommentModal from \"./component/CommentModal\";\nimport InfoCard from \"./component/InfoCard\";\nimport PostCard from \"./component/PostCard\";\nimport Loader from './component/Loader';\nimport apiCall from \"./appService\";\nimport moment from 'moment';\n\nfunction App() {\n  // State initialization\n  const [ posts, setPosts ] = useState([]);\n  const [ comments, setComments ] = useState([]);\n  const [ likes, setLikes ] = useState([]);\n  const [ likesLoading, setLikesLoading ] = useState(false);\n  const [ loading, setLoading ] = useState(true);\n  const [ commentModalShow, setCommentModalShow ] = useState(false);\n  const [ filterDate, setFilterDate ] = useState(new Date());\n  const [error, setError] = useState(false);\n\n  // Function to get post from api\n  const getPosts = (d) => {\n      const date = moment(d).format('YYYY-MM-DD');\n      setLoading(true);\n      setPosts([]);\n      setLikes([]);\n      setComments([]);\n      setError(false);\n      apiCall('/posts?day='+ date)\n          .then(function (response) {\n              setLoading(false);\n              if(response.data && response.data.posts){\n                  setPosts(response.data.posts);\n              }\n          })\n          .catch(function (error) {\n              setLoading(false);\n              setError(true);\n      });\n  };\n\n  // Initial api call to get post\n  useEffect(() => {\n      getPosts(filterDate);\n  }, []);\n\n  // Function to handle post like dislike\n  const likePost = (postId) => {\n      setLikes([]);\n      setLikesLoading(true);\n      setError(false);\n      const index = posts.findIndex((d) => d.id === postId);\n      if(index === -1) {\n        return;\n      }\n      let voteCount = posts[index].votes_count;\n        if(!posts[index].current_user.voted_for_post) {\n            voteCount = voteCount + 1;\n        } else {\n            voteCount = voteCount -1;\n        }\n\n      const post = [\n          ...posts.slice(0, index),\n          {\n              ...posts[index],\n              votes_count: voteCount,\n              current_user: {\n                  ...posts[index].current_user,\n                  voted_for_post: !posts[index].current_user.voted_for_post\n              }\n           },\n          ...posts.slice(index + 1)\n      ];\n      // set update object in post array\n      setPosts(post);\n      // Api call to get voter of post\n      apiCall(`/posts/${postId}/votes`)\n          .then(function (response) {\n              setLikesLoading(false);\n              if(response?.data?.votes) {\n                  setLikes(response.data.votes);\n              }\n          })\n          .catch(function (error) {\n              setLikesLoading(false);\n              setError(true);\n      });\n  };\n\n  // Function get post comments\n  const getPostComments = (postId) => {\n      setComments([]);\n      setLoading(true);\n      setCommentModalShow(true);\n      setError(false);\n      apiCall('/comments?search[post_id]='+postId)\n          .then(function (response) {\n              setLoading(false);\n              if(response?.data?.comments) {\n                  setComments(response.data.comments);\n              }\n          })\n          .catch(function (error) {\n              setLoading(false);\n              setError(true);\n      });\n  };\n\n  // Function to filter post by date\n  const onFilter = (date) => {\n      setFilterDate(date);\n      getPosts(date);\n  };\n\n  // Function to clear filter\n  const clearFilter = () => {\n      setFilterDate(new Date);\n      getPosts(new Date);\n  };\n\n  return (\n    <div className=\"\">\n        <header className=\"py-2 px-3\">\n            <span className=\"text-white font-weight-bold\"><h3>post.com</h3></span>\n        </header>\n        {\n          error &&\n          <Alert variant=\"danger\" className=\"text-center\">\n            Something went wrong. Try again later.\n          </Alert>\n        }\n        <div className=\"container-fluid\">\n            <div className=\"row content\">\n                <div className=\"col-md-4 col-lg-3 sidenav border pt-2\">\n                    <h4>Filter</h4>\n                    <div className=\"input-group\">\n                        <DatePicker\n                            selected={filterDate}\n                            // dateFormat=\"dd-MM-yyyy\"\n                            onChange={(date) => onFilter(date)}\n                        />\n                    </div>\n                    <div className=\"input-group py-2 \">\n                        <button className=\"btn btn-primary border\" type=\"button\" onClick={() => clearFilter()}>\n                            Clear Filter\n                        </button>\n                    </div>\n                    <hr />\n                    { likes && likes.length ? <div className=\"py-2\">People Like the post</div> : ''}\n                    <div className=\"py-2 \" style={{ overflowY: \"auto\", maxHeight: 350 }}>\n                        {\n                            likesLoading && !likes.length ? <Loader /> :\n                            likes && likes.length ? likes.map(like => <InfoCard key={like.id} data={like} />): ''\n                        }\n                    </div>\n                </div>\n                <div className=\"col-md-8 col-lg-9 pt-2\">\n                    <div className=\"row m-0\">\n                        {\n                            loading && !posts.length ? <Loader /> :\n                            posts && posts.length ? posts.map((post) =>\n                                <PostCard key={post.id} post={post} likePostEvent={likePost} getPostCommentsEvent={getPostComments}  />\n                            ) : <div className=\"w-100 text-center\"><h4>No Post Found</h4></div>\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n        <CommentModal loading={loading} comments={comments} show={commentModalShow} hide={setCommentModalShow} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}